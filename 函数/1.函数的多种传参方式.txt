1.位置参数
        传递的参数和定义的参数的顺序及个数必须一致
        def user_info(name, age, gender):
            print(f"您的名字是： {name},年龄是: {age}, 性别是： {gender}")

        # 位置参数
        user_info(n"小明", 20, "男")
2.关键字参数
        def user_info(name, age, gender):
            print(f"您的名字是： {name},年龄是: {age}, 性别是： {gender}")

        # 关键字传参
        user_info(name="小明", age=20, gender="男")
        #可以不按照固定顺序
        user_info(age=20, gender="男", name="小明")
        #可以和位置参数混用，位置参数必须在前,且匹配参数顺序
        user_info("小明", gender="男", age=20)
        #函数调用时通过“键=值”形式传递参数；可以不固定顺序；如果和位置参数混用，位置参数必须在前,且匹配参数顺序，但关键字之间不存在先后顺序

3.缺省参数
    缺省参数也叫默认参数，调用函数时可不传该默认参数的值;所有位置参数必须出现在默认参数前
    def user_info(name, age, gender="男"):
        print(f"您的名字是： {name},年龄是: {age}, 性别是： {gender}")

    user_info("TOM", 20)
    user_info("ROSE", 18, "女")

4.不定长参数
    也叫可变参数，用于不确定调用的时候会传递多少个参数；
    不定长参数的类型：（1）位置传递；（2）关键字传递
    （1）位置传递:传递的所有参数都会被args变量收集，他会根据传进参数的位置合并为一个元组，args是元组类型
    def user_info(*args):
        print(args)

    user_info('TOM')  //('TOM',)
    user_info('TOM', 18) //('TOM', 18)

    （2）关键字传递的不定长：参数是“键=值”的形式，所有的“键=值”都会被kwargs接受，同时形成字典
    def user_info(**kwargs):
        print(kwargs)

    user_info(name='TOM', age=18, id=110) // {'name': 'TOM', 'age': 18. 'id': 110}
